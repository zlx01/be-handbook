import{_ as r,c as e,o as t,ag as o}from"./chunks/framework.CbbjguyR.js";const c=JSON.parse('{"title":"Java 历史 - by doubao","description":"","frontmatter":{},"headers":[],"relativePath":"language/java/history.md","filePath":"language/java/history.md","lastUpdated":1743181075000}'),i={name:"language/java/history.md"};function l(n,a,v,s,J,d){return t(),e("div",null,a[0]||(a[0]=[o('<h1 id="java-历史-by-doubao" tabindex="-1">Java 历史 - by doubao <a class="header-anchor" href="#java-历史-by-doubao" aria-label="Permalink to &quot;Java 历史 - by doubao&quot;">​</a></h1><h3 id="诞生背景-1990-年代初" tabindex="-1">诞生背景（1990 年代初） <a class="header-anchor" href="#诞生背景-1990-年代初" aria-label="Permalink to &quot;诞生背景（1990 年代初）&quot;">​</a></h3><p>20 世纪 90 年代初，Sun Microsystems 公司（后来被 Oracle 收购）的詹姆斯・高斯林（James Gosling）领导的团队启动了一个名为 “Green Project” 的项目，旨在开发一种用于智能家电的编程语言和平台。由于家电设备的多样性，需要一种跨平台、安全且具有高性能的语言，Java 便应运而生。最初它被命名为 Oak，后来因商标问题更名为 Java。</p><h3 id="正式发布-1995-年" tabindex="-1">正式发布（1995 年） <a class="header-anchor" href="#正式发布-1995-年" aria-label="Permalink to &quot;正式发布（1995 年）&quot;">​</a></h3><p>1995 年 5 月 23 日，Sun 公司正式发布 Java 和 HotJava 浏览器。Java 凭借其 “一次编写，到处运行”（Write Once, Run Anywhere）的特性，迅速在互联网领域引起关注。这一特性得益于 Java 虚拟机（JVM），它可以在不同的操作系统上解释执行 Java 字节码，使得 Java 程序具有高度的可移植性。</p><h3 id="java-1-0-java-1-4-1996-2002-年" tabindex="-1">Java 1.0 - Java 1.4（1996 - 2002 年） <a class="header-anchor" href="#java-1-0-java-1-4-1996-2002-年" aria-label="Permalink to &quot;Java 1.0 - Java 1.4（1996 - 2002 年）&quot;">​</a></h3><ul><li><strong>Java 1.0（1996 年）</strong>：包含了基本的面向对象特性、类库和开发工具，如编译器（javac）和解释器（java）。</li><li><strong>Java 1.1（1997 年）</strong>：引入了内部类、反射机制、JavaBeans 等重要特性，增强了 Java 的功能和灵活性。</li><li><strong>Java 2 Platform（1998 年）</strong>：Java 2 被拆分为三个版本：Java 2 Standard Edition（J2SE）、Java 2 Enterprise Edition（J2EE）和 Java 2 Micro Edition（J2ME），分别针对桌面应用、企业级应用和移动设备应用开发。</li><li><strong>Java 1.2 - 1.4（1998 - 2002 年）</strong>：在这期间，Java 不断发展和完善，引入了许多新特性，如集合框架、Swing 图形用户界面库、Java 数据库连接（JDBC）、XML 处理等。</li></ul><h3 id="java-5-0-2004-年" tabindex="-1">Java 5.0（2004 年） <a class="header-anchor" href="#java-5-0-2004-年" aria-label="Permalink to &quot;Java 5.0（2004 年）&quot;">​</a></h3><p>Java 5.0（也称为 J2SE 5.0）是 Java 发展历程中的一个重要里程碑，引入了许多语法糖和新特性，如泛型、枚举类型、自动装箱和拆箱、注解、可变参数等，大大提高了 Java 的开发效率和代码的可读性。</p><h3 id="java-6-java-8-2006-2014-年" tabindex="-1">Java 6 - Java 8（2006 - 2014 年） <a class="header-anchor" href="#java-6-java-8-2006-2014-年" aria-label="Permalink to &quot;Java 6 - Java 8（2006 - 2014 年）&quot;">​</a></h3><ul><li><strong>Java 6（2006 年）</strong>：对性能进行了优化，增强了安全性和管理性，同时改进了 Java Web Start 和 Java Plug - in 等技术。</li><li><strong>Java 7（2011 年）</strong>：引入了一些实用的特性，如字符串在 switch 语句中的使用、try - with - resources 语句、二进制字面量等。</li><li><strong>Java 8（2014 年）</strong>：是 Java 历史上最重要的版本之一，引入了 Lambda 表达式、Stream API、函数式接口、默认方法等特性，使得 Java 具备了函数式编程的能力，极大地提高了代码的简洁性和可维护性。</li></ul><h3 id="java-9-java-17-2017-2021-年" tabindex="-1">Java 9 - Java 17（2017 - 2021 年） <a class="header-anchor" href="#java-9-java-17-2017-2021-年" aria-label="Permalink to &quot;Java 9 - Java 17（2017 - 2021 年）&quot;">​</a></h3><ul><li><strong>Java 9（2017 年）</strong>：引入了模块化系统（Jigsaw 项目），增强了 Java 的安全性和可维护性，同时改进了 REPL（交互式编程环境）工具。</li><li><strong>Java 10（2018 年）</strong>：引入了局部变量类型推断（var 关键字），简化了代码编写。</li><li><strong>Java 11（2018 年）</strong>：成为长期支持（LTS）版本，提供了 HTTP Client API、嵌套类访问控制等新特性，同时移除了一些过时的模块。</li><li><strong>Java 17（2021 年）</strong>：也是一个 LTS 版本，引入了密封类（Sealed Classes）等新特性，增强了 Java 的安全性和可维护性。</li></ul><h3 id="被-oracle-收购及后续发展-2010-年至今" tabindex="-1">被 Oracle 收购及后续发展（2010 年至今） <a class="header-anchor" href="#被-oracle-收购及后续发展-2010-年至今" aria-label="Permalink to &quot;被 Oracle 收购及后续发展（2010 年至今）&quot;">​</a></h3><p>2010 年，Oracle 收购了 Sun Microsystems，继续推动 Java 的发展。从 Java 11 开始，Java 采用了更频繁的发布周期，每半年发布一个新的功能版本，每三年发布一个长期支持版本，以满足开发者对新特性的需求和企业对稳定性的要求。同时，Java 在云计算、大数据、人工智能等领域仍然保持着广泛的应用。</p>',15)]))}const u=r(i,[["render",l]]);export{c as __pageData,u as default};
